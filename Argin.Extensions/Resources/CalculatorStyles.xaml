<ResourceDictionary 
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:converters="clr-namespace:Argin.Extensions.Resources.ConvertersForResources;assembly=Argin.Extensions">

    <converters:PointRelativeWidthHeightConverter x:Key="PointRelativeWidthHeightConverter" />

    <LinearGradientBrush x:Key="CalculatorBackgroundBrush">
        <GradientStop Color="Gray" Offset="1.0" />
        <GradientStop Color="DarkGray" Offset="0" />
    </LinearGradientBrush>

    <SolidColorBrush x:Key="CalculatorBorderBrush" Color="#333333"/>
    <SolidColorBrush x:Key="NegativeLossBrush" Color="#990000"/>
    <SolidColorBrush x:Key="PositiveGainBrush" Color="#196619"/>
    
    <Style x:Key="CloseButtonRound" TargetType="{x:Type Button}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Grid>
                        <Canvas x:Name="BaseCanvas">
                            <Ellipse x:Name="Circle"
                                     Stroke="Black"
                                     StrokeThickness="2" 
                                     Height="{Binding Path=Height,RelativeSource={RelativeSource TemplatedParent}}" 
                                     Width="{Binding Path=Width,RelativeSource={RelativeSource TemplatedParent}}">
                                <Ellipse.Style>
                                    <Style TargetType="{x:Type Ellipse}">
                                        <Setter Property="Fill" Value="#990000"/>
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType=Canvas},
                                               Path=IsMouseOver}" Value="True">
                                                <Setter Property="Fill">
                                                    <Setter.Value>
                                                        <RadialGradientBrush 
                                                        GradientOrigin="0.5,0.5"
                                                        Center="0.5,0.5" 
                                                        RadiusX="0.5" RadiusY="0.5">
                                                            <RadialGradientBrush.GradientStops>
                                                                <GradientStop Color="#FFEE5858" Offset="0" />
                                                                <GradientStop Color="#FFCB3333" Offset="1.0" />
                                                            </RadialGradientBrush.GradientStops>
                                                        </RadialGradientBrush>
                                                    </Setter.Value>
                                                </Setter>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </Ellipse.Style>
                            </Ellipse>
                            <Path Stroke="Black" StrokeThickness="4" Name="UIPath" Fill="{DynamicResource CalculatorBorderBrush}"   >
                                <Path.Data>
                                    <PathGeometry >
                                        <PathFigure>
                                            <PathFigure.StartPoint >
                                                <MultiBinding Converter="{StaticResource PointRelativeWidthHeightConverter}" ConverterParameter="Quadrant2">
                                                    <Binding ElementName="Circle" Path="Width"/>
                                                    <Binding ElementName="Circle" Path="Height"/>
                                                </MultiBinding>
                                            </PathFigure.StartPoint>
                                            <LineSegment>
                                                <LineSegment.Point>
                                                    <MultiBinding Converter="{StaticResource PointRelativeWidthHeightConverter}" ConverterParameter="Quadrant4">
                                                        <Binding ElementName="Circle" Path="Width"/>
                                                        <Binding ElementName="Circle" Path="Height"/>
                                                    </MultiBinding>
                                                </LineSegment.Point>
                                            </LineSegment>
                                        </PathFigure>
                                        <PathFigure>
                                            <PathFigure.StartPoint >
                                                <MultiBinding Converter="{StaticResource PointRelativeWidthHeightConverter}" ConverterParameter="Quadrant1">
                                                    <Binding ElementName="Circle" Path="Width"/>
                                                    <Binding ElementName="Circle" Path="Height"/>
                                                </MultiBinding>
                                            </PathFigure.StartPoint>
                                            <LineSegment>
                                                <LineSegment.Point>
                                                    <MultiBinding Converter="{StaticResource PointRelativeWidthHeightConverter}" ConverterParameter="Quadrant3">
                                                        <Binding ElementName="Circle" Path="Width"/>
                                                        <Binding ElementName="Circle" Path="Height"/>
                                                    </MultiBinding>
                                                </LineSegment.Point>
                                            </LineSegment>
                                        </PathFigure>
                                    </PathGeometry>
                                </Path.Data>
                            </Path>
                        </Canvas>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type TextBox}">
        <Setter Property="Background" Value="LightGray"></Setter>
        <Setter Property="BorderBrush" Value="Black"></Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBox}">
                    <Border x:Name="Border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
                        <ScrollViewer x:Name="PART_ContentHost" Focusable="false" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="BorderBrush" TargetName="Border" Value="#00cccc"/>
                        </Trigger>
                        <Trigger Property="IsKeyboardFocused" Value="true">
                            <Setter Property="BorderBrush" TargetName="Border" Value="#00cccc"/>
                        </Trigger>
                        <Trigger Property="Validation.HasError" Value="True">
                            <Setter Property="BorderBrush" Value="Red"/>
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="Validation.HasError" Value="True"/>
                                <Condition Property="IsMouseOver" Value="True"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="BorderBrush" TargetName="Border" Value="#ffb3b3"/>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="Validation.HasError" Value="True"/>
                                <Condition Property="IsKeyboardFocused" Value="True"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="BorderBrush" TargetName="Border" Value="#ffb3b3"/>
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>
